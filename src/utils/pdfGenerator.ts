
import jsPDF from 'jspdf';

interface ReadingData {
  type: 'tarot' | 'numerology' | 'horoscope';
  title: string;
  content: string;
  userProfile?: {
    fullName: string;
    birthDate: string;
    birthPlace?: string;
  };
  theme?: string;
  zodiacSign?: string;
}

export const generateReadingPDF = (data: ReadingData): void => {
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.width;
  const pageHeight = pdf.internal.pageSize.height;
  const margin = 20;
  const maxWidth = pageWidth - (margin * 2);
  
  // Set title
  pdf.setFontSize(20);
  pdf.setFont('helvetica', 'bold');
  pdf.text(data.title, margin, 30);
  
  let yPosition = 50;
  
  // Add user info if available
  if (data.userProfile) {
    pdf.setFontSize(12);
    pdf.setFont('helvetica', 'normal');
    pdf.text(`Name: ${data.userProfile.fullName}`, margin, yPosition);
    yPosition += 10;
    pdf.text(`Birth Date: ${data.userProfile.birthDate}`, margin, yPosition);
    yPosition += 10;
    
    if (data.userProfile.birthPlace) {
      pdf.text(`Birth Place: ${data.userProfile.birthPlace}`, margin, yPosition);
      yPosition += 10;
    }
    
    if (data.theme) {
      pdf.text(`Theme: ${data.theme}`, margin, yPosition);
      yPosition += 10;
    }
    
    if (data.zodiacSign) {
      pdf.text(`Zodiac Sign: ${data.zodiacSign}`, margin, yPosition);
      yPosition += 10;
    }
    
    yPosition += 10; // Extra spacing
  }
  
  // Add content
  pdf.setFontSize(11);
  pdf.setFont('helvetica', 'normal');
  
  // Split content into lines that fit the page width
  const lines = pdf.splitTextToSize(data.content, maxWidth);
  
  for (let i = 0; i < lines.length; i++) {
    // Check if we need a new page
    if (yPosition > pageHeight - margin) {
      pdf.addPage();
      yPosition = margin;
    }
    
    pdf.text(lines[i], margin, yPosition);
    yPosition += 6;
  }
  
  // Add footer with page numbers
  const totalPages = pdf.getNumberOfPages();
  for (let i = 1; i <= totalPages; i++) {
    pdf.setPage(i);
    pdf.setFontSize(8);
    pdf.setFont('helvetica', 'italic');
    pdf.text(
      `Generated by My Tarot and Horoscope - Page ${i} of ${totalPages}`,
      margin,
      pageHeight - 10
    );
  }
  
  // Generate filename
  const timestamp = new Date().toISOString().split('T')[0];
  const filename = `${data.type}-reading-${data.userProfile?.fullName || 'user'}-${timestamp}.pdf`.replace(/\s+/g, '-');
  
  // Download the PDF
  pdf.save(filename);
};
